name: Build

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GITHUB_CLIENT_ID: ${{ secrets.YOUR_GITHUB_CLIENT_ID }}
  GITHUB_CLIENT_SECRET: ${{ secrets.YOUR_GITHUB_CLIENT_SECRET }}
  AWS_S3_BUCKETS_TRACKS: ${{ secrets.YOUR_AWS_S3_BUCKETS_TRACKS }}
  AWS_CREDENTIALS_ACCESS_KEY: ${{ secrets.YOUR_AWS_CREDENTIALS_ACCESS_KEY }}
  AWS_CREDENTIALS_SECRET_KEY: ${{ secrets.YOUR_AWS_CREDENTIALS_SECRET_KEY }}

jobs:
  build1:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: root
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'oracle'
          cache: 'gradle'

      - name: Create MySQL Database
        run: mysql --host 127.0.0.1 --port 3306 --user=root --password=root -e "CREATE DATABASE IF NOT EXISTS player;"

      - name: Grant execute permission for gradlew
        run: chmod +x ./backend/gradlew

      - name: Gradle clean Build without tests
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/player
        run: |
          cd ./backend 
          ./gradlew clean build --no-daemon -x test
